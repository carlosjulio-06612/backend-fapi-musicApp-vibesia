"""Add ondelete cascade for user foreign keys

Revision ID: 2d12193b6184
Revises: 360b16ba22c2
Create Date: 2025-06-09 23:00:06.549188

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2d12193b6184'
down_revision: Union[str, None] = '360b16ba22c2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_albums_title'), table_name='albums', schema='vibesia_schema')
    op.drop_constraint(op.f('fk_albums_artist'), 'albums', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(None, 'albums', 'artists', ['artist_id'], ['artist_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.drop_index(op.f('idx_artists_name'), table_name='artists', schema='vibesia_schema')
    op.drop_index(op.f('idx_audit_log_action_type'), table_name='audit_log', schema='vibesia_schema')
    op.drop_index(op.f('idx_audit_log_app_user_id'), table_name='audit_log', schema='vibesia_schema')
    op.drop_index(op.f('idx_audit_log_record_id'), table_name='audit_log', schema='vibesia_schema')
    op.drop_index(op.f('idx_audit_log_table_name'), table_name='audit_log', schema='vibesia_schema')
    op.drop_index(op.f('idx_audit_log_timestamp'), table_name='audit_log', schema='vibesia_schema')
    op.drop_index(op.f('idx_playback_history_playback_date'), table_name='playback_history', schema='vibesia_schema')
    op.drop_index(op.f('idx_playback_history_song_id'), table_name='playback_history', schema='vibesia_schema')
    op.drop_index(op.f('idx_playback_history_user_id'), table_name='playback_history', schema='vibesia_schema')
    op.drop_constraint(op.f('fk_playback_history_song'), 'playback_history', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(op.f('fk_playback_history_device'), 'playback_history', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(op.f('fk_playback_history_user'), 'playback_history', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(None, 'playback_history', 'users', ['user_id'], ['user_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', ondelete='CASCADE')
    op.create_foreign_key(None, 'playback_history', 'devices', ['device_id'], ['device_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.create_foreign_key(None, 'playback_history', 'songs', ['song_id'], ['song_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.drop_constraint(op.f('fk_playlist_songs_song'), 'playlist_songs', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(op.f('fk_playlist_songs_playlist'), 'playlist_songs', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(None, 'playlist_songs', 'songs', ['song_id'], ['song_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.create_foreign_key(None, 'playlist_songs', 'playlists', ['playlist_id'], ['playlist_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.drop_index(op.f('idx_playlists_user_id'), table_name='playlists', schema='vibesia_schema')
    op.drop_constraint(op.f('fk_playlists_user'), 'playlists', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(None, 'playlists', 'users', ['user_id'], ['user_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', ondelete='CASCADE')
    op.drop_constraint(op.f('fk_song_genres_genre'), 'song_genres', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(op.f('fk_song_genres_song'), 'song_genres', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(None, 'song_genres', 'songs', ['song_id'], ['song_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.create_foreign_key(None, 'song_genres', 'genres', ['genre_id'], ['genre_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.drop_index(op.f('idx_songs_title'), table_name='songs', schema='vibesia_schema')
    op.drop_constraint(op.f('fk_songs_album'), 'songs', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(None, 'songs', 'albums', ['album_id'], ['album_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.drop_index(op.f('idx_user_device_device_id'), table_name='user_device', schema='vibesia_schema')
    op.drop_index(op.f('idx_user_device_user_id'), table_name='user_device', schema='vibesia_schema')
    op.drop_constraint(op.f('fk_user_device_devices'), 'user_device', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(op.f('fk_user_device_user'), 'user_device', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(None, 'user_device', 'devices', ['device_id'], ['device_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema')
    op.create_foreign_key(None, 'user_device', 'users', ['user_id'], ['user_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_device', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(None, 'user_device', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(op.f('fk_user_device_user'), 'user_device', 'users', ['user_id'], ['user_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_user_device_devices'), 'user_device', 'devices', ['device_id'], ['device_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_index(op.f('idx_user_device_user_id'), 'user_device', ['user_id'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_user_device_device_id'), 'user_device', ['device_id'], unique=False, schema='vibesia_schema')
    op.drop_constraint(None, 'songs', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(op.f('fk_songs_album'), 'songs', 'albums', ['album_id'], ['album_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_index(op.f('idx_songs_title'), 'songs', ['title'], unique=False, schema='vibesia_schema')
    op.drop_constraint(None, 'song_genres', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(None, 'song_genres', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(op.f('fk_song_genres_song'), 'song_genres', 'songs', ['song_id'], ['song_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_song_genres_genre'), 'song_genres', 'genres', ['genre_id'], ['genre_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint(None, 'playlists', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(op.f('fk_playlists_user'), 'playlists', 'users', ['user_id'], ['user_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_index(op.f('idx_playlists_user_id'), 'playlists', ['user_id'], unique=False, schema='vibesia_schema')
    op.drop_constraint(None, 'playlist_songs', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(None, 'playlist_songs', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(op.f('fk_playlist_songs_playlist'), 'playlist_songs', 'playlists', ['playlist_id'], ['playlist_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_playlist_songs_song'), 'playlist_songs', 'songs', ['song_id'], ['song_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint(None, 'playback_history', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(None, 'playback_history', schema='vibesia_schema', type_='foreignkey')
    op.drop_constraint(None, 'playback_history', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(op.f('fk_playback_history_user'), 'playback_history', 'users', ['user_id'], ['user_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_playback_history_device'), 'playback_history', 'devices', ['device_id'], ['device_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(op.f('fk_playback_history_song'), 'playback_history', 'songs', ['song_id'], ['song_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_index(op.f('idx_playback_history_user_id'), 'playback_history', ['user_id'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_playback_history_song_id'), 'playback_history', ['song_id'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_playback_history_playback_date'), 'playback_history', ['playback_date'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_audit_log_timestamp'), 'audit_log', ['timestamp'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_audit_log_table_name'), 'audit_log', ['table_name'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_audit_log_record_id'), 'audit_log', ['table_name', 'record_id'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_audit_log_app_user_id'), 'audit_log', ['app_user_id'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_audit_log_action_type'), 'audit_log', ['action_type'], unique=False, schema='vibesia_schema')
    op.create_index(op.f('idx_artists_name'), 'artists', ['name'], unique=False, schema='vibesia_schema')
    op.drop_constraint(None, 'albums', schema='vibesia_schema', type_='foreignkey')
    op.create_foreign_key(op.f('fk_albums_artist'), 'albums', 'artists', ['artist_id'], ['artist_id'], source_schema='vibesia_schema', referent_schema='vibesia_schema', onupdate='CASCADE', ondelete='CASCADE')
    op.create_index(op.f('idx_albums_title'), 'albums', ['title'], unique=False, schema='vibesia_schema')
    # ### end Alembic commands ###
